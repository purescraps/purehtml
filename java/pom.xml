<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.purescraps.purehtml</groupId>
    <artifactId>purehtml</artifactId>
    <version>0.1.0</version>
    <packaging>jar</packaging>
    <!-- Use mvn clean package -P Specs for testing.
    It will be created at the target/Specs folder as ${project.artifactId}-${project.version}-Specs.jar
         Use mvn clean package if you want library jar.
    It will be created at the target/lib folder as   ${project.artifactId}-${project.version}jar. -->
    <name>PureHTML</name>
    <description>PureHTML is an HTML parsing specification for extracting useful data from HTMLs in the JSON form. </description>

    <properties>
        <maven.compiler.source>23</maven.compiler.source>
        <maven.compiler.target>23</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <!-- Library dependencies -->
    <dependencies>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>2.2</version>
        </dependency>

        <dependency>
            <groupId>com.github.erosb</groupId>
            <artifactId>everit-json-schema</artifactId>
            <version>1.14.4</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>2.15.2</version>
        </dependency>

        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.17.2</version>
        </dependency>

        <dependency>
            <groupId>com.github.java-json-tools</groupId>
            <artifactId>json-schema-validator</artifactId>
            <version>2.2.14</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Plugin to create the default library JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>default-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Plugin to create a fat JAR with a main class for testing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <id>specs</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <!-- Output the fat JAR to a different folder -->
                            <outputFile>${project.build.directory}/RunSpecs.jar</outputFile>
                            <!-- Specify the main class for the fat JAR -->
                            <transformers>
                                <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>org.purescraps.purehtml.tests.PureHTMLSpecsRunner</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- Profile for the default library build -->
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault> <!-- This will be active by default -->
            </activation>
        </profile>

        <!-- Profile for the fat JAR with testing -->
        <profile>
            <id>specs</id>
            <dependencies>
                <!-- You can define additional dependencies for the fat JAR, if needed -->
            </dependencies>
        </profile>
    </profiles>
</project>